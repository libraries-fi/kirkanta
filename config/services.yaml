# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fi'
    content_languages: ['fi', 'sv', 'en', 'ru', 'se']
    pager_size: 50
    user_entity: 'App\Entity\User'
    images_dir: files/images
    image_sizes:
        small: 200x200
        medium: 1000x1000
        large: 1920x1920
        huge: 3840x3840

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
    _instanceof:
        App\Menu\Breadcrumb\BreadcrumbProviderInterface:
            tags: ['app.breadcrumb_provider']

    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    App\Controller\:
        resource: '../src/Controller'
        tags:
          - { name: controller.service_arguments }

    App\Component\Twig\TableExtension:
        tags:
            - { name: twig.extension }
    App\Component\Twig\FontAwesomeExtension:
        tags:
            - { name: twig.extension }
    App\EventListener\ImageResizeSubscriber:
        arguments: ['@imagine', '%image_sizes%']
        tags:
            - { name: kernel.event_subscriber }
            - { name: form.event_subscriber }

    App\Module\Schedules\EventListener\UpdateSchedules:
        tags:
            - { name: doctrine.event_listener, event: postPersist, lazy: true }
            - { name: doctrine.event_listener, event: preRemove, lazy: true }
            - { name: doctrine.event_listener, event: preUpdate, lazy: true }
            - { name: kernel.event_listener, event: kernel.terminate }

    App\Module\ApiCache\EventListener\CacheEntity:
        tags:
            - { name: doctrine.event_listener, event: postPersist, lazy: true, priority: -1000 }
            - { name: doctrine.event_listener, event: postUpdate, lazy: true, priority: -1000 }
            - { name: kernel.event_listener, event: kernel.terminate }

    App\Form\Extension\EntityTypeExtension:
        tags:
            - { name: form.type_extension, extended_type: 'Symfony\Bridge\Doctrine\Form\Type\EntityType' }
    App\Form\Extension\SimpleEntityExtension:
        arguments: ['@doctrine.orm.entity_manager']
        tags:
            - { name: form.type_extension, extended_type: 'Symfony\Component\Form\Extension\Core\Type\ChoiceType' }
    App\Form\Extension\TranslatableTextExtension:
        tags:
            - { name: form.type_extension, extended_type: 'Symfony\Component\Form\Extension\Core\Type\TextType' }

    App\Request\ParamConverter\EntityFromTypeAndId:
        arguments: ['@entity_type_manager']
        tags:
            - { name: request.param_converter, converter: entity_from_type_and_id }
    App\Module\Translation\DatabaseLoader:
        arguments: ['@database_connection']
        tags:
            - { name: translation.loader, alias: db }

    App\Routing\EntityRouteLoader:
        tags: ['routing.loader']

    App\Routing\LibraryRouteLoader:
        tags: ['routing.loader']

    App\Doctrine\EventListener\AlterRepositoryClassSubscriber:
        tags:
            - { name: doctrine.event_subscriber }
    App\Doctrine\EventListener\CreatedTimeInitializer:
        tags:
            - { name: doctrine.event_subscriber }
    App\Doctrine\EventListener\UpdateModifiedTime:
        tags:
            - { name: doctrine.event_subscriber }
    App\Doctrine\EventListener\GroupOwnershipInitializer:
        arguments: ['@security.token_storage']
        tags:
            - { name: doctrine.event_subscriber }
    App\Doctrine\EventListener\WeightInitializer:
        tags:
            - { name: doctrine.event_subscriber }
    App\Module\Schedules\EventListener\ClearSchedulesOnPeriodRemove:
        tags:
            - { name: doctrine.orm.entity_listener }
    App\Doctrine\EntityListener\ConsortiumGroupOwnershipInitializer:
        arguments: ['@security.token_storage']
        tags:
            -
                name: doctrine.orm.entity_listener
                entity: App\Entity\Consortium
                event: prePersist
    App\Doctrine\EventListener\LibraryConsortiumInitializer:
        tags:
            - { name: doctrine.orm.entity_listener }
    entity_type_manager:
        public: true
        class: 'App\EntityTypeManager'
        arguments: ['@doctrine.orm.entity_manager', '@form.factory', '@knp_paginator', '@request_stack', '@security.authorization_checker', '@security.token_storage', '%entity_types%']
    App\EntityTypeManager: '@entity_type_manager'

    App\Module\Translation\TranslationManagerFlusher:
        # arguments: ['@data_collector.translation']
        arguments: ['@translator.data_collector']
        tags:
            - { name: kernel.event_listener, event: kernel.response }
            - { name: kernel.event_listener, event: kernel.terminate }

    App\Module\Ptv\Form\Extension\LibraryFormExtension:
        tags:
            - { name: form.type_extension, extended_type: App\Form\LibraryForm }
    App\Module\Ptv\EventListener\ExportLibraryListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response }

    menu_builder:
        alias: 'App\Menu\Builder'

    App\Menu\BreadcrumbBuilder: ~

    breadcrumb_builder:
        alias: 'App\Menu\BreadcrumbBuilder'

    App\Menu\Breadcrumb\LibraryResourceCrumbProvider:
        tags:
            - { name: app.breadcrumb_provider, priority: 100 }

    kirkanta.menu.main:
        public: true
        class: 'Knp\Menu\MenuItem'
        factory: ['@menu_builder', 'mainMenu']
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: main }
    kirkanta.menu.admin:
        public: true
        class: 'Knp\Menu\MenuItem'
        factory: ['@menu_builder', 'adminMenu']
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: admin }
    kirkanta.menu.admin_tools:
        public: true
        class: 'Knp\Menu\MenuItem'
        factory: ['@menu_builder', 'adminTools']
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: admin_tools }
    kirkanta.menu.library_tabs:
        public: true
        class: 'Knp\Menu\MenuItem'
        factory: ['@menu_builder', 'libraryTabs']
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: library_tabs }
    kirkanta.breadcrumb:
        class: 'Knp\Menu\MenuItem'
        factory: ['@breadcrumb_builder', 'build']
        tags:
            - { name: knp_menu.menu, alias: breadcrumb }

    finna_menu_builder:
        alias: 'App\Module\Finna\MenuBuilder'

    kirkanta.menu.finna_organisation_tabs:
        public: true
        class: 'Knp\Menu\MenuItem'
        factory: ['@finna_menu_builder', 'organisationTabs']
        arguments: ['@request_stack']
        tags:
            - { name: knp_menu.menu, alias: finna_organisation_tabs }

    App\Menu\Matcher\PathTraceVoter:
        tags:
            - { name: knp_menu.voter }



    App\Module\LegacyApiCompatibility\Command\SyncLegacyDatabase:
        arguments: ['@doctrine.dbal.default_connection', '@doctrine.dbal.db_v3_connection']













    App\Module\KirkantaEntityCommands\Command\DeleteKirkantaEntity:
        arguments: ['@entity_type_manager']

    # NOTE: The built-in object normalizer has a priority -1000 so this must have a higher value.
    App\Module\ApiCache\Serializer\Normalizer\EntityNormalizer:
        factory: ['App\Module\ApiCache\Serializer\Normalizer\EntityNormalizer', 'create']
        arguments: ['@serializer.mapping.class_metadata_factory', '@serializer.property_accessor']
        tags:
            - { name: serializer.normalizer, priority: -999}

    kirkanta.normalizer.entity:
        alias: App\Module\ApiCache\Serializer\Normalizer\EntityNormalizer

    App\Module\ApiCache\Serializer\Normalizer\PictureNormalizer:
        arguments: ['@kirkanta.normalizer.entity']
        tags:
            - { name: serializer.normalizer, priority: -998}
    App\Module\ApiCache\Serializer\Normalizer\PersonNormalizer:
        arguments: ['@kirkanta.normalizer.entity']
        tags:
            - { name: serializer.normalizer, priority: -998}
    App\Module\ApiCache\Serializer\Normalizer\ConsortiumNormalizer:
        arguments: ['@kirkanta.normalizer.entity']
        tags:
            - { name: serializer.normalizer, priority: -998}
    App\Module\ApiCache\Serializer\Normalizer\LibraryNormalizer:
        arguments: ['@kirkanta.normalizer.entity']
        tags:
            - { name: serializer.normalizer, priority: -998}
    App\Module\ApiCache\Serializer\Normalizer\FinnaOrganisationNormalizer:
        arguments: ['@kirkanta.normalizer.entity']
        tags:
            - { name: serializer.normalizer, priority: -998 }
    App\Module\ApiCache\Serializer\Normalizer\ServiceInstanceNormalizer:
        arguments: ['@kirkanta.normalizer.entity']
        tags:
            - { name: serializer.normalizer, priority: -998 }
    App\Module\ApiCache\Serializer\Normalizer\CollectionNormalizer:
        tags:
            - { name: serializer.normalizer, priority: -998 }






    UserAccountsBundle\Authentication\Event\UpdateLastLoginSubscriber:
        arguments: ['@doctrine.orm.entity_manager', '%user_entity%']
        tags:
            - { name: kernel.event_subscriber }



    Jsor\Doctrine\PostGIS\Event\ORMSchemaEventSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
    twig.string_loader_extension:
        class: 'Twig_Extension_StringLoader'
        tags:
            - { name: twig.extension }

    imagine:
        class: Imagine\Gd\Imagine

    Imagine\Image\ImagineInterface: '@imagine'



    # Not provided by the bundle itself...
    Vich\UploaderBundle\Metadata\MetadataReader:
        alias: vich_uploader.metadata_reader
